#!/bin/zsh
################################
## Wake County Public Schools ##
## Z Shell function library   ##
################################
## Contributor: Andrew Zimmer ##
## Last updated: 06/30/2022   ##
################################
## Purpose: Get the current   ##
## user's home directory.     ##
################################
## Arguments:                 ##
##   None.                     ##
################################
## Output:                    ##
## - Home directory if user   ##
##   is logged in.            ##
## - Empty string if no one   ##
##   is logged in.            ##
## - Error code 1 if $HOME    ##
##   and calculated version   ##
##   don't match.             ##
################################

function get-home() {
	# Export our customized path
	export PATH="/Library/WCPSS/Apps/bin/:/Library/WCPSS/Apps/sbin/:Library/WCPSS/Scripts/Executables/:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/libexec"

	# Set -e/-o errexit to force the script to terminate on any non-zero exit code
	# Set -u/-o nounset to force the script to exit if unset variables are called
	set -o errexit
	set -o nounset

	# Declare variable and use shell variable $HOME to calculate value.
	local shell_home="$(echo $HOME)"
	# Construct a string using other data and compare them.
	local current_user="$(get-username)"
	local current_user_dir="/Users/${current_user}"

	# Double check that they match.
	if [ ${shell_home} != "${current_user_dir}" ]; then
		echo "The $HOME variable in shell is not as expected. Exiting."
		return 1
	fi

	# Return the value, returning an empty string if no home directory was found.
	[[ -n "${current_user_dir}" ]] && echo "${current_user_dir}" || echo ""
}
